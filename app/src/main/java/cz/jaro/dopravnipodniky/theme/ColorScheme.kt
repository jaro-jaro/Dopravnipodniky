package cz.jaro.dopravnipodniky.theme

import androidx.compose.material3.darkColorScheme

val colorsCervene = darkColorScheme(
    primary = cervenePrimary,
    onPrimary = cerveneOnPrimary,
    primaryContainer = cervenePrimaryContainer,
    onPrimaryContainer = cerveneOnPrimaryContainer,
    secondary = cerveneSecondary,
    onSecondary = cerveneOnSecondary,
    secondaryContainer = cerveneSecondaryContainer,
    onSecondaryContainer = cerveneOnSecondaryContainer,
    tertiary = cerveneTertiary,
    onTertiary = cerveneOnTertiary,
    tertiaryContainer = cerveneTertiaryContainer,
    onTertiaryContainer = cerveneOnTertiaryContainer,
    error = cerveneError,
    errorContainer = cerveneErrorContainer,
    onError = cerveneOnError,
    onErrorContainer = cerveneOnErrorContainer,
    background = cerveneBackground,
    onBackground = cerveneOnBackground,
    surface = cerveneSurface,
    onSurface = cerveneOnSurface,
    surfaceVariant = cerveneSurfaceVariant,
    onSurfaceVariant = cerveneOnSurfaceVariant,
    outline = cerveneOutline,
    inverseOnSurface = cerveneInverseOnSurface,
    inverseSurface = cerveneInverseSurface,
    inversePrimary = cerveneInversePrimary,
)

val colorsRuzove = darkColorScheme(
    primary = ruzovePrimary,
    onPrimary = ruzoveOnPrimary,
    primaryContainer = ruzovePrimaryContainer,
    onPrimaryContainer = ruzoveOnPrimaryContainer,
    secondary = ruzoveSecondary,
    onSecondary = ruzoveOnSecondary,
    secondaryContainer = ruzoveSecondaryContainer,
    onSecondaryContainer = ruzoveOnSecondaryContainer,
    tertiary = ruzoveTertiary,
    onTertiary = ruzoveOnTertiary,
    tertiaryContainer = ruzoveTertiaryContainer,
    onTertiaryContainer = ruzoveOnTertiaryContainer,
    error = ruzoveError,
    errorContainer = ruzoveErrorContainer,
    onError = ruzoveOnError,
    onErrorContainer = ruzoveOnErrorContainer,
    background = ruzoveBackground,
    onBackground = ruzoveOnBackground,
    surface = ruzoveSurface,
    onSurface = ruzoveOnSurface,
    surfaceVariant = ruzoveSurfaceVariant,
    onSurfaceVariant = ruzoveOnSurfaceVariant,
    outline = ruzoveOutline,
    inverseOnSurface = ruzoveInverseOnSurface,
    inverseSurface = ruzoveInverseSurface,
    inversePrimary = ruzoveInversePrimary,
)

val colorsFialove = darkColorScheme(
    primary = fialovePrimary,
    onPrimary = fialoveOnPrimary,
    primaryContainer = fialovePrimaryContainer,
    onPrimaryContainer = fialoveOnPrimaryContainer,
    secondary = fialoveSecondary,
    onSecondary = fialoveOnSecondary,
    secondaryContainer = fialoveSecondaryContainer,
    onSecondaryContainer = fialoveOnSecondaryContainer,
    tertiary = fialoveTertiary,
    onTertiary = fialoveOnTertiary,
    tertiaryContainer = fialoveTertiaryContainer,
    onTertiaryContainer = fialoveOnTertiaryContainer,
    error = fialoveError,
    errorContainer = fialoveErrorContainer,
    onError = fialoveOnError,
    onErrorContainer = fialoveOnErrorContainer,
    background = fialoveBackground,
    onBackground = fialoveOnBackground,
    surface = fialoveSurface,
    onSurface = fialoveOnSurface,
    surfaceVariant = fialoveSurfaceVariant,
    onSurfaceVariant = fialoveOnSurfaceVariant,
    outline = fialoveOutline,
    inverseOnSurface = fialoveInverseOnSurface,
    inverseSurface = fialoveInverseSurface,
    inversePrimary = fialoveInversePrimary,
)

val colorsSyteFialove = darkColorScheme(
    primary = syteFialovePrimary,
    onPrimary = syteFialoveOnPrimary,
    primaryContainer = syteFialovePrimaryContainer,
    onPrimaryContainer = syteFialoveOnPrimaryContainer,
    secondary = syteFialoveSecondary,
    onSecondary = syteFialoveOnSecondary,
    secondaryContainer = syteFialoveSecondaryContainer,
    onSecondaryContainer = syteFialoveOnSecondaryContainer,
    tertiary = syteFialoveTertiary,
    onTertiary = syteFialoveOnTertiary,
    tertiaryContainer = syteFialoveTertiaryContainer,
    onTertiaryContainer = syteFialoveOnTertiaryContainer,
    error = syteFialoveError,
    errorContainer = syteFialoveErrorContainer,
    onError = syteFialoveOnError,
    onErrorContainer = syteFialoveOnErrorContainer,
    background = syteFialoveBackground,
    onBackground = syteFialoveOnBackground,
    surface = syteFialoveSurface,
    onSurface = syteFialoveOnSurface,
    surfaceVariant = syteFialoveSurfaceVariant,
    onSurfaceVariant = syteFialoveOnSurfaceVariant,
    outline = syteFialoveOutline,
    inverseOnSurface = syteFialoveInverseOnSurface,
    inverseSurface = syteFialoveInverseSurface,
    inversePrimary = syteFialoveInversePrimary,
)

val colorsIndigove = darkColorScheme(
    primary = indigovePrimary,
    onPrimary = indigoveOnPrimary,
    primaryContainer = indigovePrimaryContainer,
    onPrimaryContainer = indigoveOnPrimaryContainer,
    secondary = indigoveSecondary,
    onSecondary = indigoveOnSecondary,
    secondaryContainer = indigoveSecondaryContainer,
    onSecondaryContainer = indigoveOnSecondaryContainer,
    tertiary = indigoveTertiary,
    onTertiary = indigoveOnTertiary,
    tertiaryContainer = indigoveTertiaryContainer,
    onTertiaryContainer = indigoveOnTertiaryContainer,
    error = indigoveError,
    errorContainer = indigoveErrorContainer,
    onError = indigoveOnError,
    onErrorContainer = indigoveOnErrorContainer,
    background = indigoveBackground,
    onBackground = indigoveOnBackground,
    surface = indigoveSurface,
    onSurface = indigoveOnSurface,
    surfaceVariant = indigoveSurfaceVariant,
    onSurfaceVariant = indigoveOnSurfaceVariant,
    outline = indigoveOutline,
    inverseOnSurface = indigoveInverseOnSurface,
    inverseSurface = indigoveInverseSurface,
    inversePrimary = indigoveInversePrimary,
)

val colorsModre = darkColorScheme(
    primary = modrePrimary,
    onPrimary = modreOnPrimary,
    primaryContainer = modrePrimaryContainer,
    onPrimaryContainer = modreOnPrimaryContainer,
    secondary = modreSecondary,
    onSecondary = modreOnSecondary,
    secondaryContainer = modreSecondaryContainer,
    onSecondaryContainer = modreOnSecondaryContainer,
    tertiary = modreTertiary,
    onTertiary = modreOnTertiary,
    tertiaryContainer = modreTertiaryContainer,
    onTertiaryContainer = modreOnTertiaryContainer,
    error = modreError,
    errorContainer = modreErrorContainer,
    onError = modreOnError,
    onErrorContainer = modreOnErrorContainer,
    background = modreBackground,
    onBackground = modreOnBackground,
    surface = modreSurface,
    onSurface = modreOnSurface,
    surfaceVariant = modreSurfaceVariant,
    onSurfaceVariant = modreOnSurfaceVariant,
    outline = modreOutline,
    inverseOnSurface = modreInverseOnSurface,
    inverseSurface = modreInverseSurface,
    inversePrimary = modreInversePrimary,
)

val colorsSvetleModre = darkColorScheme(
    primary = svetleModrePrimary,
    onPrimary = svetleModreOnPrimary,
    primaryContainer = svetleModrePrimaryContainer,
    onPrimaryContainer = svetleModreOnPrimaryContainer,
    secondary = svetleModreSecondary,
    onSecondary = svetleModreOnSecondary,
    secondaryContainer = svetleModreSecondaryContainer,
    onSecondaryContainer = svetleModreOnSecondaryContainer,
    tertiary = svetleModreTertiary,
    onTertiary = svetleModreOnTertiary,
    tertiaryContainer = svetleModreTertiaryContainer,
    onTertiaryContainer = svetleModreOnTertiaryContainer,
    error = svetleModreError,
    errorContainer = svetleModreErrorContainer,
    onError = svetleModreOnError,
    onErrorContainer = svetleModreOnErrorContainer,
    background = svetleModreBackground,
    onBackground = svetleModreOnBackground,
    surface = svetleModreSurface,
    onSurface = svetleModreOnSurface,
    surfaceVariant = svetleModreSurfaceVariant,
    onSurfaceVariant = svetleModreOnSurfaceVariant,
    outline = svetleModreOutline,
    inverseOnSurface = svetleModreInverseOnSurface,
    inverseSurface = svetleModreInverseSurface,
    inversePrimary = svetleModreInversePrimary,
)

val colorsTyrkysove = darkColorScheme(
    primary = tyrkysovePrimary,
    onPrimary = tyrkysoveOnPrimary,
    primaryContainer = tyrkysovePrimaryContainer,
    onPrimaryContainer = tyrkysoveOnPrimaryContainer,
    secondary = tyrkysoveSecondary,
    onSecondary = tyrkysoveOnSecondary,
    secondaryContainer = tyrkysoveSecondaryContainer,
    onSecondaryContainer = tyrkysoveOnSecondaryContainer,
    tertiary = tyrkysoveTertiary,
    onTertiary = tyrkysoveOnTertiary,
    tertiaryContainer = tyrkysoveTertiaryContainer,
    onTertiaryContainer = tyrkysoveOnTertiaryContainer,
    error = tyrkysoveError,
    errorContainer = tyrkysoveErrorContainer,
    onError = tyrkysoveOnError,
    onErrorContainer = tyrkysoveOnErrorContainer,
    background = tyrkysoveBackground,
    onBackground = tyrkysoveOnBackground,
    surface = tyrkysoveSurface,
    onSurface = tyrkysoveOnSurface,
    surfaceVariant = tyrkysoveSurfaceVariant,
    onSurfaceVariant = tyrkysoveOnSurfaceVariant,
    outline = tyrkysoveOutline,
    inverseOnSurface = tyrkysoveInverseOnSurface,
    inverseSurface = tyrkysoveInverseSurface,
    inversePrimary = tyrkysoveInversePrimary,
)

val colorsModrozelene = darkColorScheme(
    primary = modrozelenePrimary,
    onPrimary = modrozeleneOnPrimary,
    primaryContainer = modrozelenePrimaryContainer,
    onPrimaryContainer = modrozeleneOnPrimaryContainer,
    secondary = modrozeleneSecondary,
    onSecondary = modrozeleneOnSecondary,
    secondaryContainer = modrozeleneSecondaryContainer,
    onSecondaryContainer = modrozeleneOnSecondaryContainer,
    tertiary = modrozeleneTertiary,
    onTertiary = modrozeleneOnTertiary,
    tertiaryContainer = modrozeleneTertiaryContainer,
    onTertiaryContainer = modrozeleneOnTertiaryContainer,
    error = modrozeleneError,
    errorContainer = modrozeleneErrorContainer,
    onError = modrozeleneOnError,
    onErrorContainer = modrozeleneOnErrorContainer,
    background = modrozeleneBackground,
    onBackground = modrozeleneOnBackground,
    surface = modrozeleneSurface,
    onSurface = modrozeleneOnSurface,
    surfaceVariant = modrozeleneSurfaceVariant,
    onSurfaceVariant = modrozeleneOnSurfaceVariant,
    outline = modrozeleneOutline,
    inverseOnSurface = modrozeleneInverseOnSurface,
    inverseSurface = modrozeleneInverseSurface,
    inversePrimary = modrozeleneInversePrimary,
)

val colorsZelene = darkColorScheme(
    primary = zelenePrimary,
    onPrimary = zeleneOnPrimary,
    primaryContainer = zelenePrimaryContainer,
    onPrimaryContainer = zeleneOnPrimaryContainer,
    secondary = zeleneSecondary,
    onSecondary = zeleneOnSecondary,
    secondaryContainer = zeleneSecondaryContainer,
    onSecondaryContainer = zeleneOnSecondaryContainer,
    tertiary = zeleneTertiary,
    onTertiary = zeleneOnTertiary,
    tertiaryContainer = zeleneTertiaryContainer,
    onTertiaryContainer = zeleneOnTertiaryContainer,
    error = zeleneError,
    errorContainer = zeleneErrorContainer,
    onError = zeleneOnError,
    onErrorContainer = zeleneOnErrorContainer,
    background = zeleneBackground,
    onBackground = zeleneOnBackground,
    surface = zeleneSurface,
    onSurface = zeleneOnSurface,
    surfaceVariant = zeleneSurfaceVariant,
    onSurfaceVariant = zeleneOnSurfaceVariant,
    outline = zeleneOutline,
    inverseOnSurface = zeleneInverseOnSurface,
    inverseSurface = zeleneInverseSurface,
    inversePrimary = zeleneInversePrimary,
)

val colorsSvetleZelene = darkColorScheme(
    primary = svetleZelenePrimary,
    onPrimary = svetleZeleneOnPrimary,
    primaryContainer = svetleZelenePrimaryContainer,
    onPrimaryContainer = svetleZeleneOnPrimaryContainer,
    secondary = svetleZeleneSecondary,
    onSecondary = svetleZeleneOnSecondary,
    secondaryContainer = svetleZeleneSecondaryContainer,
    onSecondaryContainer = svetleZeleneOnSecondaryContainer,
    tertiary = svetleZeleneTertiary,
    onTertiary = svetleZeleneOnTertiary,
    tertiaryContainer = svetleZeleneTertiaryContainer,
    onTertiaryContainer = svetleZeleneOnTertiaryContainer,
    error = svetleZeleneError,
    errorContainer = svetleZeleneErrorContainer,
    onError = svetleZeleneOnError,
    onErrorContainer = svetleZeleneOnErrorContainer,
    background = svetleZeleneBackground,
    onBackground = svetleZeleneOnBackground,
    surface = svetleZeleneSurface,
    onSurface = svetleZeleneOnSurface,
    surfaceVariant = svetleZeleneSurfaceVariant,
    onSurfaceVariant = svetleZeleneOnSurfaceVariant,
    outline = svetleZeleneOutline,
    inverseOnSurface = svetleZeleneInverseOnSurface,
    inverseSurface = svetleZeleneInverseSurface,
    inversePrimary = svetleZeleneInversePrimary,
)

val colorsLimetkove = darkColorScheme(
    primary = limetkovePrimary,
    onPrimary = limetkoveOnPrimary,
    primaryContainer = limetkovePrimaryContainer,
    onPrimaryContainer = limetkoveOnPrimaryContainer,
    secondary = limetkoveSecondary,
    onSecondary = limetkoveOnSecondary,
    secondaryContainer = limetkoveSecondaryContainer,
    onSecondaryContainer = limetkoveOnSecondaryContainer,
    tertiary = limetkoveTertiary,
    onTertiary = limetkoveOnTertiary,
    tertiaryContainer = limetkoveTertiaryContainer,
    onTertiaryContainer = limetkoveOnTertiaryContainer,
    error = limetkoveError,
    errorContainer = limetkoveErrorContainer,
    onError = limetkoveOnError,
    onErrorContainer = limetkoveOnErrorContainer,
    background = limetkoveBackground,
    onBackground = limetkoveOnBackground,
    surface = limetkoveSurface,
    onSurface = limetkoveOnSurface,
    surfaceVariant = limetkoveSurfaceVariant,
    onSurfaceVariant = limetkoveOnSurfaceVariant,
    outline = limetkoveOutline,
    inverseOnSurface = limetkoveInverseOnSurface,
    inverseSurface = limetkoveInverseSurface,
    inversePrimary = limetkoveInversePrimary,
)

val colorsZlute = darkColorScheme(
    primary = zlutePrimary,
    onPrimary = zluteOnPrimary,
    primaryContainer = zlutePrimaryContainer,
    onPrimaryContainer = zluteOnPrimaryContainer,
    secondary = zluteSecondary,
    onSecondary = zluteOnSecondary,
    secondaryContainer = zluteSecondaryContainer,
    onSecondaryContainer = zluteOnSecondaryContainer,
    tertiary = zluteTertiary,
    onTertiary = zluteOnTertiary,
    tertiaryContainer = zluteTertiaryContainer,
    onTertiaryContainer = zluteOnTertiaryContainer,
    error = zluteError,
    errorContainer = zluteErrorContainer,
    onError = zluteOnError,
    onErrorContainer = zluteOnErrorContainer,
    background = zluteBackground,
    onBackground = zluteOnBackground,
    surface = zluteSurface,
    onSurface = zluteOnSurface,
    surfaceVariant = zluteSurfaceVariant,
    onSurfaceVariant = zluteOnSurfaceVariant,
    outline = zluteOutline,
    inverseOnSurface = zluteInverseOnSurface,
    inverseSurface = zluteInverseSurface,
    inversePrimary = zluteInversePrimary,
)

val colorsJantarove = darkColorScheme(
    primary = jantarovePrimary,
    onPrimary = jantaroveOnPrimary,
    primaryContainer = jantarovePrimaryContainer,
    onPrimaryContainer = jantaroveOnPrimaryContainer,
    secondary = jantaroveSecondary,
    onSecondary = jantaroveOnSecondary,
    secondaryContainer = jantaroveSecondaryContainer,
    onSecondaryContainer = jantaroveOnSecondaryContainer,
    tertiary = jantaroveTertiary,
    onTertiary = jantaroveOnTertiary,
    tertiaryContainer = jantaroveTertiaryContainer,
    onTertiaryContainer = jantaroveOnTertiaryContainer,
    error = jantaroveError,
    errorContainer = jantaroveErrorContainer,
    onError = jantaroveOnError,
    onErrorContainer = jantaroveOnErrorContainer,
    background = jantaroveBackground,
    onBackground = jantaroveOnBackground,
    surface = jantaroveSurface,
    onSurface = jantaroveOnSurface,
    surfaceVariant = jantaroveSurfaceVariant,
    onSurfaceVariant = jantaroveOnSurfaceVariant,
    outline = jantaroveOutline,
    inverseOnSurface = jantaroveInverseOnSurface,
    inverseSurface = jantaroveInverseSurface,
    inversePrimary = jantaroveInversePrimary,
)

val colorsOranzove = darkColorScheme(
    primary = oranzovePrimary,
    onPrimary = oranzoveOnPrimary,
    primaryContainer = oranzovePrimaryContainer,
    onPrimaryContainer = oranzoveOnPrimaryContainer,
    secondary = oranzoveSecondary,
    onSecondary = oranzoveOnSecondary,
    secondaryContainer = oranzoveSecondaryContainer,
    onSecondaryContainer = oranzoveOnSecondaryContainer,
    tertiary = oranzoveTertiary,
    onTertiary = oranzoveOnTertiary,
    tertiaryContainer = oranzoveTertiaryContainer,
    onTertiaryContainer = oranzoveOnTertiaryContainer,
    error = oranzoveError,
    errorContainer = oranzoveErrorContainer,
    onError = oranzoveOnError,
    onErrorContainer = oranzoveOnErrorContainer,
    background = oranzoveBackground,
    onBackground = oranzoveOnBackground,
    surface = oranzoveSurface,
    onSurface = oranzoveOnSurface,
    surfaceVariant = oranzoveSurfaceVariant,
    onSurfaceVariant = oranzoveOnSurfaceVariant,
    outline = oranzoveOutline,
    inverseOnSurface = oranzoveInverseOnSurface,
    inverseSurface = oranzoveInverseSurface,
    inversePrimary = oranzoveInversePrimary,
)

val colorsSyteOranzove = darkColorScheme(
    primary = syteOranzovePrimary,
    onPrimary = syteOranzoveOnPrimary,
    primaryContainer = syteOranzovePrimaryContainer,
    onPrimaryContainer = syteOranzoveOnPrimaryContainer,
    secondary = syteOranzoveSecondary,
    onSecondary = syteOranzoveOnSecondary,
    secondaryContainer = syteOranzoveSecondaryContainer,
    onSecondaryContainer = syteOranzoveOnSecondaryContainer,
    tertiary = syteOranzoveTertiary,
    onTertiary = syteOranzoveOnTertiary,
    tertiaryContainer = syteOranzoveTertiaryContainer,
    onTertiaryContainer = syteOranzoveOnTertiaryContainer,
    error = syteOranzoveError,
    errorContainer = syteOranzoveErrorContainer,
    onError = syteOranzoveOnError,
    onErrorContainer = syteOranzoveOnErrorContainer,
    background = syteOranzoveBackground,
    onBackground = syteOranzoveOnBackground,
    surface = syteOranzoveSurface,
    onSurface = syteOranzoveOnSurface,
    surfaceVariant = syteOranzoveSurfaceVariant,
    onSurfaceVariant = syteOranzoveOnSurfaceVariant,
    outline = syteOranzoveOutline,
    inverseOnSurface = syteOranzoveInverseOnSurface,
    inverseSurface = syteOranzoveInverseSurface,
    inversePrimary = syteOranzoveInversePrimary,
)

val colorsHnede = darkColorScheme(
    primary = hnedePrimary,
    onPrimary = hnedeOnPrimary,
    primaryContainer = hnedePrimaryContainer,
    onPrimaryContainer = hnedeOnPrimaryContainer,
    secondary = hnedeSecondary,
    onSecondary = hnedeOnSecondary,
    secondaryContainer = hnedeSecondaryContainer,
    onSecondaryContainer = hnedeOnSecondaryContainer,
    tertiary = hnedeTertiary,
    onTertiary = hnedeOnTertiary,
    tertiaryContainer = hnedeTertiaryContainer,
    onTertiaryContainer = hnedeOnTertiaryContainer,
    error = hnedeError,
    errorContainer = hnedeErrorContainer,
    onError = hnedeOnError,
    onErrorContainer = hnedeOnErrorContainer,
    background = hnedeBackground,
    onBackground = hnedeOnBackground,
    surface = hnedeSurface,
    onSurface = hnedeOnSurface,
    surfaceVariant = hnedeSurfaceVariant,
    onSurfaceVariant = hnedeOnSurfaceVariant,
    outline = hnedeOutline,
    inverseOnSurface = hnedeInverseOnSurface,
    inverseSurface = hnedeInverseSurface,
    inversePrimary = hnedeInversePrimary,
)

val colorsSede = darkColorScheme(
    primary = sedePrimary,
    onPrimary = sedeOnPrimary,
    primaryContainer = sedePrimaryContainer,
    onPrimaryContainer = sedeOnPrimaryContainer,
    secondary = sedeSecondary,
    onSecondary = sedeOnSecondary,
    secondaryContainer = sedeSecondaryContainer,
    onSecondaryContainer = sedeOnSecondaryContainer,
    tertiary = sedeTertiary,
    onTertiary = sedeOnTertiary,
    tertiaryContainer = sedeTertiaryContainer,
    onTertiaryContainer = sedeOnTertiaryContainer,
    error = sedeError,
    errorContainer = sedeErrorContainer,
    onError = sedeOnError,
    onErrorContainer = sedeOnErrorContainer,
    background = sedeBackground,
    onBackground = sedeOnBackground,
    surface = sedeSurface,
    onSurface = sedeOnSurface,
    surfaceVariant = sedeSurfaceVariant,
    onSurfaceVariant = sedeOnSurfaceVariant,
    outline = sedeOutline,
    inverseOnSurface = sedeInverseOnSurface,
    inverseSurface = sedeInverseSurface,
    inversePrimary = sedeInversePrimary,
)

val colorsModrosede = darkColorScheme(
    primary = modrosedePrimary,
    onPrimary = modrosedeOnPrimary,
    primaryContainer = modrosedePrimaryContainer,
    onPrimaryContainer = modrosedeOnPrimaryContainer,
    secondary = modrosedeSecondary,
    onSecondary = modrosedeOnSecondary,
    secondaryContainer = modrosedeSecondaryContainer,
    onSecondaryContainer = modrosedeOnSecondaryContainer,
    tertiary = modrosedeTertiary,
    onTertiary = modrosedeOnTertiary,
    tertiaryContainer = modrosedeTertiaryContainer,
    onTertiaryContainer = modrosedeOnTertiaryContainer,
    error = modrosedeError,
    errorContainer = modrosedeErrorContainer,
    onError = modrosedeOnError,
    onErrorContainer = modrosedeOnErrorContainer,
    background = modrosedeBackground,
    onBackground = modrosedeOnBackground,
    surface = modrosedeSurface,
    onSurface = modrosedeOnSurface,
    surfaceVariant = modrosedeSurfaceVariant,
    onSurfaceVariant = modrosedeOnSurfaceVariant,
    outline = modrosedeOutline,
    inverseOnSurface = modrosedeInverseOnSurface,
    inverseSurface = modrosedeInverseSurface,
    inversePrimary = modrosedeInversePrimary,
)

val colorsCerne = darkColorScheme(
    primary = cernePrimary,
    onPrimary = cerneOnPrimary,
    primaryContainer = cernePrimaryContainer,
    onPrimaryContainer = cerneOnPrimaryContainer,
    secondary = cerneSecondary,
    onSecondary = cerneOnSecondary,
    secondaryContainer = cerneSecondaryContainer,
    onSecondaryContainer = cerneOnSecondaryContainer,
    tertiary = cerneTertiary,
    onTertiary = cerneOnTertiary,
    tertiaryContainer = cerneTertiaryContainer,
    onTertiaryContainer = cerneOnTertiaryContainer,
    error = cerneError,
    errorContainer = cerneErrorContainer,
    onError = cerneOnError,
    onErrorContainer = cerneOnErrorContainer,
    background = cerneBackground,
    onBackground = cerneOnBackground,
    surface = cerneSurface,
    onSurface = cerneOnSurface,
    surfaceVariant = cerneSurfaceVariant,
    onSurfaceVariant = cerneOnSurfaceVariant,
    outline = cerneOutline,
    inverseOnSurface = cerneInverseOnSurface,
    inverseSurface = cerneInverseSurface,
    inversePrimary = cerneInversePrimary,
)

val colorsBile = darkColorScheme(
    primary = bilePrimary,
    onPrimary = bileOnPrimary,
    primaryContainer = bilePrimaryContainer,
    onPrimaryContainer = bileOnPrimaryContainer,
    secondary = bileSecondary,
    onSecondary = bileOnSecondary,
    secondaryContainer = bileSecondaryContainer,
    onSecondaryContainer = bileOnSecondaryContainer,
    tertiary = bileTertiary,
    onTertiary = bileOnTertiary,
    tertiaryContainer = bileTertiaryContainer,
    onTertiaryContainer = bileOnTertiaryContainer,
    error = bileError,
    errorContainer = bileErrorContainer,
    onError = bileOnError,
    onErrorContainer = bileOnErrorContainer,
    background = bileBackground,
    onBackground = bileOnBackground,
    surface = bileSurface,
    onSurface = bileOnSurface,
    surfaceVariant = bileSurfaceVariant,
    onSurfaceVariant = bileOnSurfaceVariant,
    outline = bileOutline,
    inverseOnSurface = bileInverseOnSurface,
    inverseSurface = bileInverseSurface,
    inversePrimary = bileInversePrimary,
)
